spring:
  config:
    import: optional:file:.env[.properties]
  application:
    name: server

  servlet:
    multipart:
      max-file-size: 1000MB
      max-request-size: 5000MB

  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    username: ${MYSQL_USER}
    password: ${MYSQL_PASSWORD}
    url: ${MYSQL_URL}

  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL8Dialect

#  kafka:
#    bootstrap-servers: kafka:29092
#    producer:
#      key-serializer: org.apache.kafka.common.serialization.StringSerializer
#      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
#    consumer:
#      group-id: photo-processing-group
#      auto-offset-reset: earliest
#      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
#      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
#      properties:
#        spring:
#          json:
#            trusted:
#              packages: '*'
  data:
    redis:
      host: redis
      port: 6379

  cloud:
    aws:
      credentials:
        accesskey: ${AWS_ACCESS_KEY}
        secretkey: ${AWS_SECRET_KEY}
      s3:
        bucket: ${S3_BUCKET_NAME}
      stack:
        auto: false
      region:
        static: ap-northeast-2

logging:
  level:
    root: info

  file:
    name: recoder.log